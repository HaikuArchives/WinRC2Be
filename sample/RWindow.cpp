// Generated by WinRC2Be Beta 8 Build Oct 20 2002 - http://www.realtech-vr.com
#include <Debug.h>
#include <InterfaceKit.h>
#include <Application.h>
#include "RWindow.h"
#include "RView.h"
#include "RViewList.h"

template<unsigned ID_VALUE>
RWindow<ID_VALUE>::RWindow(BRect rect, const char *pTitle, window_look look, window_feel feel, unsigned long flags, bool bIsCenter ) : BWindow(rect, pTitle, look, feel, flags)
{
	m_List = LoadResourceView(ID_VALUE, 0);
	RViewList *ptr = m_List;
	ASSERT(ptr);
	BRect bounds = Bounds();
	BView *view = new BView(bounds, "base", B_FOLLOW_ALL, B_WILL_DRAW);
	ASSERT(view);
	view->SetViewColor(221, 221, 221);
	AddChild(view);
	while (ptr)
	{
	if( ptr->archive) 
	{
		if (ptr->index<0) view->AddChild(ptr->archive); 
		else 
		{
			int i;
			RViewList *p = m_List;
			for(i=0;i<ptr->index;i++) p = p->next;
			p->archive->AddChild(ptr->archive);
		}
	}
		ptr = ptr->next;
	}	
	BScreen b; bounds = b.Frame();
	float w = bounds.right, h = bounds.bottom; 
	if (bIsCenter) MoveTo( (w - (rect.right - rect.left)) / 2, (h - (rect.bottom - rect.top)) / 2 );
	OnInitDialog();
}
//TODO : 
template<unsigned ID_VALUE>
void RWindow<ID_VALUE>::Clean()
{
	while (m_List)
	{
		RViewList *next = m_List->next;
		delete m_List;
		m_List = next;
	}
}
//TODO : 
template<unsigned ID_VALUE>
bool RWindow<ID_VALUE>::QuitRequested()
{
	Clean();
	return(true);
}
//TODO : Specializes this method to get IDC_xxx message.
template<unsigned ID_VALUE>
void RWindow<ID_VALUE>::MessageReceived(BMessage *msg)
{
	switch(msg->what) {
		default: BWindow::MessageReceived(msg); break;
	}
}
//TODO : Specializes this method to initializes default values at startup
template<unsigned ID_VALUE>
bool RWindow<ID_VALUE>::OnInitDialog()
{
	return(true);
}
#include "resource.h"
#include "RWindowCustom.cpp"
template<unsigned ID_VALUE>
BView *RWindow<ID_VALUE>::ChildID(long ID)
{
	RViewList *ptr = m_List;
	ASSERT(ptr);
	while (ptr)
	{
		if (ptr->ID == ID) return ptr->archive;
		ptr = ptr->next;
	}	
	return(NULL);
}
BWindow *LoadResource(unsigned id, void *param)
{
	switch(id) {
		case IDD_SETUP: return new RWindow<IDD_SETUP>(BRect(0, 0, 278, 153), "V3X SDK Demos", B_FLOATING_WINDOW_LOOK, B_NORMAL_WINDOW_FEEL, B_NOT_RESIZABLE|B_NOT_ZOOMABLE, true);
		default: return NULL; 
	}
}
BMenu *LoadMenu(unsigned id)
{
	switch(id) {
		default : return 0;
	}
}
